#!/bin/sh -e

echo "[ $(date) ] - It's alive !"

H_DIR=$HOME/.h/h
cd $HOME
mkdir -p .h
cd .h

doWithCheck() {
    ACTION_LABEL="$1"
    ACTION_CMD="$2"
    ACTION_CHECK="$3"
    if $ACTION_CHECK
    then
        echo "$ACTION_LABEL : Already OK : Nothing to do"
    else
        $ACTION_CMD
        ACTION_CHECK_RESULT=$($ACTION_CHECK)
        if $ACTION_CHECK_RESULT
        then
            echo "$ACTION_LABEL : OK"
        else
            echo "Something was wrong when doing $ACTION_LABEL"
            echo "    Was expecting: $ACTION_CHECK to return a 0 value. But was $ACTION_CHECK_RESULT."
            echo "    Exiting now "
            exit 1
        fi
    fi
}

doWithCheck_example() {
    F="/tmp/t"
    doWithCheck     \
        "Create $F" \
        "touch  $F" \
        "[ -f   $F ]"
}
# doWithCheck_example

REPO_URL="git@github.com:denlab/h.git"
REPO_DIR="$H_DIR"
doWithCheck                         \
    "Clone repo"                    \
    "git clone $REPO_URL $REPO_DIR" \
    "[ -d $REPO_DIR ]"

H_PATH_LINE='export PATH=$HOME/.h/h/bin:$PATH'
H_PATH_LINE_REGEX='^'"$H_PATH_LINE"'$'
SH_FILE="$HOME/.bashrc"
set -x
# doWithCheck                             \
#     "Add to PATH"                       \
#     'echo '"$H_PATH_LINE" >> "$SH_FILE" \
#     'grep '"$H_PATH_LINE_REGEX"' '"$SH_FILE"

actionCmd() {
    echo "$H_PATH_LINE" >> "$SH_FILE"
}
doWithCheck 'Add to PATH' actionCmd actionCheck
